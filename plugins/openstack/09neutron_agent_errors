#!/usr/bin/python3
from common import (
    helpers,
)
from openstack_common import (
    OPENSTACK_AGENT_ERROR_KEY_BY_TIME as AGENT_ERROR_KEY_BY_TIME,
    NEUTRON_LOGS,
)
from openstack_utils import (
    get_agent_exceptions,
)

NEUTRON_AGENT_ERROR_INFO = {}


def get_agents_exceptions():
    exc_types = ["DBConnectionError", "MessagingTimeout",
                 "AMQP server on .+ is unreachable",
                 "amqp.exceptions.ConnectionForced: .+",
                 "OSError: Server unexpectedly closed connection",
                 "ConnectionResetError: .+"]
    for agent in ["neutron-openvswitch-agent", "neutron-dhcp-agent",
                  "neutron-l3-agent", "neutron-server"]:
        e = get_agent_exceptions(agent, NEUTRON_LOGS, exc_types,
                                 include_time_in_key=AGENT_ERROR_KEY_BY_TIME)
        if e:
            NEUTRON_AGENT_ERROR_INFO[agent] = e


if __name__ == "__main__":
    get_agents_exceptions()
    if NEUTRON_AGENT_ERROR_INFO:
        NEUTRON_AGENT_ERROR_INFO = {"neutron-agent-errors":
                                    NEUTRON_AGENT_ERROR_INFO}
        if not helpers.HOTSOSYaml.master_has_plugin("openstack"):
            NEUTRON_AGENT_ERROR_INFO = {"openstack": NEUTRON_AGENT_ERROR_INFO}
            indent = 0
        else:
            indent = 2

        helpers.HOTSOSYaml.dump(NEUTRON_AGENT_ERROR_INFO, indent=indent)
