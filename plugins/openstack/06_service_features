#!/usr/bin/python3
import re
import os
import sys


# HOTSOS GLOBALS
VERBOSITY_LEVEL = int(os.environ.get('VERBOSITY_LEVEL', 0))
DATA_ROOT = os.environ.get('DATA_ROOT', '/')

if VERBOSITY_LEVEL < 3:
    sys.exit(0)

config_files = {"neutron": {"main": "etc/neutron/neutron.conf",
                            "openvswitch_agent":
                            "etc/neutron/plugins/ml2/openvswitch_agent.ini",
                            "l3_agent": "etc/neutron/l3_agent.ini",
                            "dhcp_agent": "etc/neutron/dhcp_agent.ini"},
                "nova": {"main": "etc/nova/nova.conf"}}

features = {"neutron": {"main": "availability_zone",
                        "openvswitch_agent": ["l2_population"],
                        "l3_agent": ["agent_mode", "ovs_use_veth"],
                        "dhcp_agent": ["enable_metadata_network",
                                       "enable_isolated_metadata",
                                       "ovs_use_veth"]},
            "nova": {"main": ["vcpu_pin_set", "cpu_shared_set",
                              "cpu_dedicated_set"]}}

print("  features:")

config_values = {}
for service in features:
    for module in features[service]:
        cfg = os.path.join(DATA_ROOT, config_files[service][module])
        if not os.path.exists(cfg):
            continue

        if service not in config_values:
            config_values[service] = {module: {}}
        for key in features[service][module]:
            for line in open(cfg).readlines():
                ret = re.compile(r"^{}\s*=\s*(.+)\s*".format(key)).match(line)
                if ret:
                    if module in config_values[service]:
                        config_values[service][module][key] = ret[1]
                    else:
                        config_values[service][module] = {key: ret[1]}

                    break

for service in config_values:
    print("    {}:".format(service))
    for module in config_values[service]:
        for key in config_values[service][module]:
            value = config_values[service][module][key]
            print("      {}: {}".format(key, value))
