#!/usr/bin/python3
import re
import os
import sys

from common import helpers

# HOTSOS GLOBALS
VERBOSITY_LEVEL = int(os.environ.get('VERBOSITY_LEVEL', 0))
DATA_ROOT = os.environ.get('DATA_ROOT', '/')

if VERBOSITY_LEVEL < 3:
    sys.exit(0)


def find_line(key, lines):
    for i, line in enumerate(lines):
        if re.compile(key).match(line):
            return i

    return None


config = {"nova": [{"path": os.path.join(DATA_ROOT, "etc/nova/nova.conf"),
                    "key": "my_ip"}],
          "neutron": [{"path":
                       os.path.join(DATA_ROOT, "etc/neutron/plugins/ml2/"
                                    "openvswitch_agent.ini"),
                       "key": "local_ip"}]}

print("  config:")
for svc in config:
    for info in config[svc]:
        data_source = info["path"]
        key = info["key"]
        if os.path.exists(data_source):
            ip_address = None
            for line in open(data_source).readlines():
                ret = re.compile(r"^\s*{}\s*=\s*([0-9\.]+).*".
                                 format(key)).match(line)
                if ret:
                    ip_address = ret[1]
                    lines = helpers.get_ip_addr()
                    iface = None
                    a = find_line(r".+{}.+".format(ip_address), lines)
                    while True:
                        ret = re.compile(r"^([0-9]+):\s+([a-z0-9\-@.]+):.+"
                                         ).match(lines[a])
                        if ret:
                            iface = ret[2]
                            break

                        a = a-1

                    if iface:
                        break

            if ip_address:
                print("    {}:".format(svc))
                print("       {}: {} ({})".format(key, ip_address, iface))
            else:
                print("    {}:".format(svc))
                print("       {}: {}".format(key, "no value"))
