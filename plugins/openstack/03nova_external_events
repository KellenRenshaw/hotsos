#!/usr/bin/python3
import re
import os
import sys

# HOTSOS GLOBALS
VERBOSITY_LEVEL = int(os.environ.get('VERBOSITY_LEVEL', 0))
DATA_ROOT = os.environ.get('DATA_ROOT', '/')

EXT_EVENT_INFO = {}


def get_events(event_name):
    key = (r".+\[instance: ([0-9a-z\-]+)\].+Preparing to wait for external "
           r"event ({}-[0-9a-z\-]+)\s+.+".format(event_name))  # noqa W605
    lines = open(data_source).readlines()

    events = {}
    for line in lines:
        ret = re.compile(key).match(line)
        if ret:
            events[ret[2]] = ret[1]

    for event in events:
        if event_name not in EXT_EVENT_INFO:
            EXT_EVENT_INFO[event_name] = {"succeeded": [],
                                          "failed": []}

        stages = {"Preparing": False, "Received": False, "Processing": False}
        for line in lines:
            ret = re.compile(r".+\[instance: {}\] .+ event {} .+"
                             .format(events[event], event)).match(line)
            if ret:
                sequence = ret[0]
                for stage in stages:
                    ret = re.compile(stage).search(sequence)
                    if ret:
                        stages[stage] = True

        if all([stages[stage] for stage in stages]):
            EXT_EVENT_INFO[event_name]["succeeded"].add(events[event])
        else:
            EXT_EVENT_INFO[event_name]["failed"].add(events[event])


if __name__ == "__main__":
    data_source = os.path.join(DATA_ROOT, "var/log/nova/nova-compute.log")
    if not os.path.exists(data_source):
        sys.exit(0)

    # Supported events - https://docs.openstack.org/api-ref/compute/?expanded=run-events-detail#create-external-events-os-server-external-events  # noqa E501
    get_events("network-vif-plugged")
    if EXT_EVENT_INFO:
        print("  os-server-external-events:")
        for event_name in EXT_EVENT_INFO:
            succeeded = EXT_EVENT_INFO[event_name]["succeeded"]
            print("    {}:".format(event_name))
            if succeeded:
                print("      successful:")
                for line in succeeded:
                    print("        - {}".format(line))

            failed = EXT_EVENT_INFO[event_name]["failed"]
            if failed:
                print("      failed:")
                for line in failed:
                    print("        - {}".format(line))
