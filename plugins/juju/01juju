#!/usr/bin/python3
import re
import os

from common import helpers

# HOTSOS GLOBALS
VERBOSITY_LEVEL = int(os.environ.get('VERBOSITY_LEVEL', 0))
DATA_ROOT = os.environ.get('DATA_ROOT', '/')

JUJU_LOG_PATH = os.path.join(DATA_ROOT, "var/log/juju")

MACHINES_RUNNING = set()
MACHINES_STOPPED = set()


def get_machine_info():
    ps_machines = set()
    log_machines = set()

    if not os.path.exists(JUJU_LOG_PATH):
        return

    for line in helpers.get_ps():
        if "machine-" in line:
            ret = re.compile(r".+machine-([0-9]+).*").match(line)
            if ret:
                ps_machines.add(ret[1])

    for f in os.listdir(JUJU_LOG_PATH):
        ret = re.compile(r"machine-([0-9]+)\.log.*").match(f)
        if ret:
            log_machines.add(ret[1])

    combined_machines = ps_machines.union(log_machines)
    for machine in combined_machines:
        agent_conf = os.path.join(DATA_ROOT,
                                  "var/lib/juju/agents/machine-{}/agent.conf".
                                  format(machine))
        version = "unknown"
        if os.path.exists(agent_conf):
            for line in open(agent_conf).readlines():
                ret = re.compile(r"upgradedToVersion:\s+(.+)").match(line)
                if ret:
                    version = ret[1]

        if machine in ps_machines:
            MACHINES_RUNNING.add("{} (version={})".format(machine, version))
        else:
            MACHINES_STOPPED.add(machine)


if __name__ == "__main__":
    print("juju:")

    get_machine_info()

    if MACHINES_RUNNING or MACHINES_STOPPED:
        print("  machines:")

    if MACHINES_RUNNING:
        print("    running:")
        for m in MACHINES_RUNNING:
            print("      - {}".format(m))

    if MACHINES_STOPPED:
        print("    stopped:")
        for m in MACHINES_STOPPED:
            print("      - {}".format(m))
